<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>__has_include</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>ae5510d82e4946f1656f4969911c54736</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COMPILER_ID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a81dee0709ded976b2e0319239f72d174</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STRINGIFY_HELPER</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a2ae9b72bb13abaabfcf2ee0ba7d3fa1d</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STRINGIFY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a43e1cad902b6477bec893cb6430bd6c8</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PLATFORM_ID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>adbc5372f40838899018fadbc89bd588b</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ARCHITECTURE_ID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>aba35d0d200deaeb06aee95ca297acb28</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEC</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>ad1280362da42492bbc11aa78cbf776ad</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HEX</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a46d5d95daa1bef867bd0179594310ed5</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CXX_STD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a34cc889e576a1ae6c84ae9e0a851ba21</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a0ddf1224851353fc92bfbff6f499fa97</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>info_compiler</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a4b0efeb7a5d59313986b3a0390f050f6</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>info_platform</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a2321403dee54ee23f0c2fa849c60f7d4</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>info_arch</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a59647e99d304ed33b15cb284c27ed391</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>info_language_standard_default</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a4607cccf070750927b458473ca82c090</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>info_language_extensions_default</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d3/d66/_c_make_c_x_x_compiler_id_8cpp.html</Path>
    <Anchor>a0f46a8a39e09d9b803c4766904fd7e99</Anchor>
    <DeclaredIn>CMakeCXXCompilerId.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>df/d0a/main_8cpp.html</Path>
    <Anchor>ae66f6b31b5ad750f1fe042a706a4e3d4</Anchor>
    <DeclaredIn>main.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_ip</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dc/d8e/print__ip_8cpp.html</Path>
    <Anchor>ac39fc89299ac9117dd5e0aea703ef7cc</Anchor>
    <Abstract>the function of printing ip addresses implemented through SFINAE, presented as an integral (long int,...</Abstract>
    <DeclaredIn>print_ip.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_ip</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dc/d8e/print__ip_8cpp.html</Path>
    <Anchor>a68075c556fe34adac825c367466b9f8c</Anchor>
    <Abstract>function of printing ip addresses implemented through SFINAE, presented as std::string</Abstract>
    <DeclaredIn>print_ip.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_ip</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dc/d8e/print__ip_8cpp.html</Path>
    <Anchor>af16d782db2187cdd166cc3135fc2a739</Anchor>
    <Abstract>the function of printing ip addresses implemented through SFINAE, presented as std::list or std::vect...</Abstract>
    <DeclaredIn>print_ip.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>print_ip</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dc/d8e/print__ip_8cpp.html</Path>
    <Anchor>a0d617f0c0e368860371800c97401583a</Anchor>
    <Abstract>the function of printing ip addresses implemented through SFINAE, presented as uniform tuple (identic...</Abstract>
    <DeclaredIn>print_ip.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TEST</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d5/d3a/test__print__ip_8cpp.html</Path>
    <Anchor>aabdf4f4d12b1e9c017918974ad949c26</Anchor>
    <DeclaredIn>test_print_ip.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_README</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>d3/dcc/md__r_e_a_d_m_e.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_all_same</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_all_same</Scope>
    </TokenIdentifier>
    <Path>d2/dd8/structis__all__same.html</Path>
    <Abstract>helper structure for checking the same type in template input (partial specialization)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>is_all_same</Scope>
    </TokenIdentifier>
    <Path>d2/dd8/structis__all__same.html</Path>
    <Anchor>aa55fb475da2c4a775781852629e3a1ea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_all_same&lt; A, B, OTHER... &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_all_same&lt; A, B, OTHER... &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/d4e/structis__all__same_3_01_a_00_01_b_00_01_o_t_h_e_r_8_8_8_01_4.html</Path>
    <Abstract>helper structure for checking the same type in template input (common specialization)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>is_all_same&lt; A, B, OTHER... &gt;</Scope>
    </TokenIdentifier>
    <Path>d0/d4e/structis__all__same_3_01_a_00_01_b_00_01_o_t_h_e_r_8_8_8_01_4.html</Path>
    <Anchor>a260ccf55148056dc6315ed6a15564ecf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_list</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_list</Scope>
    </TokenIdentifier>
    <Path>d4/db6/structis__list.html</Path>
    <Abstract>helper structure for type checking as a list in templates (extended structure)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_list&lt; std::list&lt; X &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_list&lt; std::list&lt; X &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>da/d60/structis__list_3_01std_1_1list_3_01_x_01_4_01_4.html</Path>
    <Abstract>helper structure for type checking as a list in templates (reduced structure)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_tuple</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_tuple</Scope>
    </TokenIdentifier>
    <Path>da/d55/structis__tuple.html</Path>
    <Abstract>helper structure for type checking as a tuple in templates (common variant)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_tuple&lt; std::tuple&lt; Types... &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_tuple&lt; std::tuple&lt; Types... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>db/d0b/structis__tuple_3_01std_1_1tuple_3_01_types_8_8_8_01_4_01_4.html</Path>
    <Abstract>helper structure for type checking as a tuple in templates (reduced variant) this structure has bool ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_uniform_tuple</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_uniform_tuple</Scope>
    </TokenIdentifier>
    <Path>d6/d01/structis__uniform__tuple.html</Path>
    <Abstract>helper structure for type checking as a uniform tuple (common variant) this structure has bool member...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_uniform_tuple&lt; std::tuple&lt; Types... &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_uniform_tuple&lt; std::tuple&lt; Types... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>de/d4a/structis__uniform__tuple_3_01std_1_1tuple_3_01_types_8_8_8_01_4_01_4.html</Path>
    <Abstract>helper structure for type checking as a uniform tuple (partial variant) this structure has bool membe...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>is_uniform_tuple&lt; std::tuple&lt; Types... &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>de/d4a/structis__uniform__tuple_3_01std_1_1tuple_3_01_types_8_8_8_01_4_01_4.html</Path>
    <Anchor>a57eb4ec88349ecf5db7db524c6c67b48</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_vector</Scope>
    </TokenIdentifier>
    <Path>de/d81/structis__vector.html</Path>
    <Abstract>helper structure for type checking as a vector in templates (extended structure)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_vector&lt; std::vector&lt; X &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>is_vector&lt; std::vector&lt; X &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>de/d98/structis__vector_3_01std_1_1vector_3_01_x_01_4_01_4.html</Path>
    <Abstract>helper structure for type checking as a vector in templates (reduced structure)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>utility_struct</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>utility_struct</Scope>
    </TokenIdentifier>
    <Path>da/d88/structutility__struct.html</Path>
    <Abstract>auxiliary recursive structure to combine the inside of the structure into one line (common variant)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill_content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>utility_struct</Scope>
    </TokenIdentifier>
    <Path>da/d88/structutility__struct.html</Path>
    <Anchor>ae8d45788b2627418a3742edd14661e29</Anchor>
    <Abstract>main member function to fill the print string Elements are combined through the delimiter &quot;....</Abstract>
    <DeclaredIn>print_ip.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>utility_struct&lt; T, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>utility_struct&lt; T, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>d2/d49/structutility__struct_3_01_t_00_010_01_4.html</Path>
    <Abstract>auxiliary recursive structure to combine the inside of the structure into one line (partial version)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fill_content</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>utility_struct&lt; T, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>d2/d49/structutility__struct_3_01_t_00_010_01_4.html</Path>
    <Anchor>aa7c43571569e1ee33d6a9cf6baff0d38</Anchor>
    <Abstract>main member function to fill the print string Elements are combined through the delimiter &quot;....</Abstract>
    <DeclaredIn>print_ip.cpp</DeclaredIn>
  </Token>
</Tokens>
