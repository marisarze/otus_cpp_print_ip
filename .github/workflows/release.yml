name: 'C++ CI'

on:
  push:
    branches:
      - main
      - dev

jobs:
  
  build_on_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build . --target print_ip 
      - run: cmake --build . --target test_print_ip
      - run: tests/test_print_ip
      - run: ./print_ip
      - run: cpack
      - run: dpkg -c print_ip-0.0.${{ github.run_number }}-Linux.deb

      - name: Prepare Doxyfile
        run: sed 's/MY_PROJECT_VERSION/0.0.${{ github.run_number }}/' Doxyfile

      # store the doc files 
      - name: Doxygen Action C++
        uses: mattnotmitt/doxygen-action@v1.3.1
        with:
          working-directory: '.'
          doxyfile-path: './Doxyfile'

      - name: Upload Output Directory
        uses: actions/upload-artifact@v2
        with:
          name: doc-files
          path: doc
          retention-days: 1
      - run: sudo chown -R $USER:$USER /home/runner/work/otus_cpp_print_ip/
      - name: Checkout the gh-pages branch
        uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          ref: gh-pages
          lfs: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Output Directory
        uses: actions/download-artifact@v2
        with:
          name: doc-files
          path: docDir
        # add, commit and push to gh-pages 
      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: Carl Timmer
          author_email: timmer@jlab.org
          message: 'Update docs'
          branch: gh-pages
          add: '["docDir/doxygen/CC/html/*"]'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./print_ip-0.0.${{ github.run_number }}-Linux.deb
          asset_name: print_ip-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

      

      

      
